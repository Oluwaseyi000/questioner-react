// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render components <Aside /> component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <aside
        class="aside"
      >
        <div
          class="aside-header"
        >
          Upcoming Meetups
        </div>
        <div
          class="aside-body"
        >
          <div
            class="aside-content upcoming-meetup"
          >
            <p>
               
              Today: 
              <span>
                 0
              </span>
            </p>
            <p>
               
              This Week:
              <span>
                 23
              </span>
            </p>
            <p>
               
              This Month:
              <span>
                 123
              </span>
            </p>
          </div>
          <div
            class="aside-header"
          >
             Your Stats
          </div>
          <div
            class="aside-body"
          >
            <div
              class="aside-content"
            >
              <p
                class="stats-list"
              >
                Question Posted: 
                <span>
                  10
                </span>
                 
              </p>
              <p
                class="stats-list"
              >
                 
                Question Commented On:
                <span>
                   23
                </span>
                 
              </p>
              <p
                class="stats-list"
              >
                 
                Total Upvote:P 
                <span>
                  123 
                </span>
                 
              </p>
              <p
                class="stats-list"
              >
                Total Downvote: 
                <span>
                  34 
                </span>
                 
              </p>
            </div>
          </div>
        </div>
        <div
          class="aside-header"
        >
          ADVERTS
        </div>
        <div
          class="aside-body"
        >
          <img
            alt="advert"
            src="https://i.imgur.com/XaKeYJE.png"
          />
        </div>
      </aside>
    </div>
  </body>,
  "container": <div>
    <aside
      class="aside"
    >
      <div
        class="aside-header"
      >
        Upcoming Meetups
      </div>
      <div
        class="aside-body"
      >
        <div
          class="aside-content upcoming-meetup"
        >
          <p>
             
            Today: 
            <span>
               0
            </span>
          </p>
          <p>
             
            This Week:
            <span>
               23
            </span>
          </p>
          <p>
             
            This Month:
            <span>
               123
            </span>
          </p>
        </div>
        <div
          class="aside-header"
        >
           Your Stats
        </div>
        <div
          class="aside-body"
        >
          <div
            class="aside-content"
          >
            <p
              class="stats-list"
            >
              Question Posted: 
              <span>
                10
              </span>
               
            </p>
            <p
              class="stats-list"
            >
               
              Question Commented On:
              <span>
                 23
              </span>
               
            </p>
            <p
              class="stats-list"
            >
               
              Total Upvote:P 
              <span>
                123 
              </span>
               
            </p>
            <p
              class="stats-list"
            >
              Total Downvote: 
              <span>
                34 
              </span>
               
            </p>
          </div>
        </div>
      </div>
      <div
        class="aside-header"
      >
        ADVERTS
      </div>
      <div
        class="aside-body"
      >
        <img
          alt="advert"
          src="https://i.imgur.com/XaKeYJE.png"
        />
      </div>
    </aside>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Should render components <Footer /> component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <footer
        class="footer"
      >
        copyright @ Adebajo Oluwaseyi | Andela 2018
      </footer>
    </div>
  </body>,
  "container": <div>
    <footer
      class="footer"
    >
      copyright @ Adebajo Oluwaseyi | Andela 2018
    </footer>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Should render components <Header /> component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <header
        class="header"
      >
        <h1
          class="header-logo"
        >
          <a
            href="/"
          >
            <span
              class="q"
            >
              Q
            </span>
            <span
              class="uestioner"
            >
              UESTIONER
            </span>
             
          </a>
           
        </h1>
        <div
          class="profile"
        >
          <a
            class="thelogin"
            href="/login"
          >
            LOG IN
          </a>
          <a
            class="thelogin"
            href="/signup"
          >
            SIGN UP
          </a>
        </div>
      </header>
    </div>
  </body>,
  "container": <div>
    <header
      class="header"
    >
      <h1
        class="header-logo"
      >
        <a
          href="/"
        >
          <span
            class="q"
          >
            Q
          </span>
          <span
            class="uestioner"
          >
            UESTIONER
          </span>
           
        </a>
         
      </h1>
      <div
        class="profile"
      >
        <a
          class="thelogin"
          href="/login"
        >
          LOG IN
        </a>
        <a
          class="thelogin"
          href="/signup"
        >
          SIGN UP
        </a>
      </div>
    </header>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Should render components <HeaderLogin /> component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <header
        class="header"
      >
        <h1
          class="header-logo"
        >
          <a
            href="../index.html"
          >
            <span
              class="q"
            >
              Q
            </span>
            <span
              class="uestioner"
            >
              UESTIONER
            </span>
          </a>
           
        </h1>
        <div
          class="profile"
        >
          <a
            class="thelogin"
            href="../admin/meetups.html"
            id="adminStatus"
          >
            ADMIN
             
          </a>
          <img
            alt=""
            id="dropdown"
            src="https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png"
          />
          <br />
           
          <span
            class="time"
            id="currentTime"
          />
        </div>
      </header>
    </div>
  </body>,
  "container": <div>
    <header
      class="header"
    >
      <h1
        class="header-logo"
      >
        <a
          href="../index.html"
        >
          <span
            class="q"
          >
            Q
          </span>
          <span
            class="uestioner"
          >
            UESTIONER
          </span>
        </a>
         
      </h1>
      <div
        class="profile"
      >
        <a
          class="thelogin"
          href="../admin/meetups.html"
          id="adminStatus"
        >
          ADMIN
           
        </a>
        <img
          alt=""
          id="dropdown"
          src="https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png"
        />
        <br />
         
        <span
          class="time"
          id="currentTime"
        />
      </div>
    </header>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Should render the component <Aside /> component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <aside
        class="aside"
      >
        <div
          class="aside-header"
        >
          Upcoming Meetups
        </div>
        <div
          class="aside-body"
        >
          <div
            class="aside-content upcoming-meetup"
          >
            <p>
               
              Today: 
              <span>
                 0
              </span>
            </p>
            <p>
               
              This Week:
              <span>
                 23
              </span>
            </p>
            <p>
               
              This Month:
              <span>
                 123
              </span>
            </p>
          </div>
          <div
            class="aside-header"
          >
             Your Stats
          </div>
          <div
            class="aside-body"
          >
            <div
              class="aside-content"
            >
              <p
                class="stats-list"
              >
                Question Posted: 
                <span>
                  10
                </span>
                 
              </p>
              <p
                class="stats-list"
              >
                 
                Question Commented On:
                <span>
                   23
                </span>
                 
              </p>
              <p
                class="stats-list"
              >
                 
                Total Upvote:P 
                <span>
                  123 
                </span>
                 
              </p>
              <p
                class="stats-list"
              >
                Total Downvote: 
                <span>
                  34 
                </span>
                 
              </p>
            </div>
          </div>
        </div>
        <div
          class="aside-header"
        >
          ADVERTS
        </div>
        <div
          class="aside-body"
        >
          <img
            alt="advert"
            src="https://i.imgur.com/XaKeYJE.png"
          />
        </div>
      </aside>
    </div>
  </body>,
  "container": <div>
    <aside
      class="aside"
    >
      <div
        class="aside-header"
      >
        Upcoming Meetups
      </div>
      <div
        class="aside-body"
      >
        <div
          class="aside-content upcoming-meetup"
        >
          <p>
             
            Today: 
            <span>
               0
            </span>
          </p>
          <p>
             
            This Week:
            <span>
               23
            </span>
          </p>
          <p>
             
            This Month:
            <span>
               123
            </span>
          </p>
        </div>
        <div
          class="aside-header"
        >
           Your Stats
        </div>
        <div
          class="aside-body"
        >
          <div
            class="aside-content"
          >
            <p
              class="stats-list"
            >
              Question Posted: 
              <span>
                10
              </span>
               
            </p>
            <p
              class="stats-list"
            >
               
              Question Commented On:
              <span>
                 23
              </span>
               
            </p>
            <p
              class="stats-list"
            >
               
              Total Upvote:P 
              <span>
                123 
              </span>
               
            </p>
            <p
              class="stats-list"
            >
              Total Downvote: 
              <span>
                34 
              </span>
               
            </p>
          </div>
        </div>
      </div>
      <div
        class="aside-header"
      >
        ADVERTS
      </div>
      <div
        class="aside-body"
      >
        <img
          alt="advert"
          src="https://i.imgur.com/XaKeYJE.png"
        />
      </div>
    </aside>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Should render the component <Footer /> component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <footer
        class="footer"
      >
        copyright @ Adebajo Oluwaseyi | Andela 2018
      </footer>
    </div>
  </body>,
  "container": <div>
    <footer
      class="footer"
    >
      copyright @ Adebajo Oluwaseyi | Andela 2018
    </footer>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Should render the component <Header /> component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <header
        class="header"
      >
        <h1
          class="header-logo"
        >
          <a
            href="/"
          >
            <span
              class="q"
            >
              Q
            </span>
            <span
              class="uestioner"
            >
              UESTIONER
            </span>
             
          </a>
           
        </h1>
        <div
          class="profile"
        >
          <a
            class="thelogin"
            href="/login"
          >
            LOG IN
          </a>
          <a
            class="thelogin"
            href="/signup"
          >
            SIGN UP
          </a>
        </div>
      </header>
    </div>
  </body>,
  "container": <div>
    <header
      class="header"
    >
      <h1
        class="header-logo"
      >
        <a
          href="/"
        >
          <span
            class="q"
          >
            Q
          </span>
          <span
            class="uestioner"
          >
            UESTIONER
          </span>
           
        </a>
         
      </h1>
      <div
        class="profile"
      >
        <a
          class="thelogin"
          href="/login"
        >
          LOG IN
        </a>
        <a
          class="thelogin"
          href="/signup"
        >
          SIGN UP
        </a>
      </div>
    </header>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Should render the component <HeaderLogin /> component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <header
        class="header"
      >
        <h1
          class="header-logo"
        >
          <a
            href="../index.html"
          >
            <span
              class="q"
            >
              Q
            </span>
            <span
              class="uestioner"
            >
              UESTIONER
            </span>
          </a>
           
        </h1>
        <div
          class="profile"
        >
          <a
            class="thelogin"
            href="../admin/meetups.html"
            id="adminStatus"
          >
            ADMIN
             
          </a>
          <img
            alt=""
            id="dropdown"
            src="https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png"
          />
          <br />
           
          <span
            class="time"
            id="currentTime"
          />
        </div>
      </header>
    </div>
  </body>,
  "container": <div>
    <header
      class="header"
    >
      <h1
        class="header-logo"
      >
        <a
          href="../index.html"
        >
          <span
            class="q"
          >
            Q
          </span>
          <span
            class="uestioner"
          >
            UESTIONER
          </span>
        </a>
         
      </h1>
      <div
        class="profile"
      >
        <a
          class="thelogin"
          href="../admin/meetups.html"
          id="adminStatus"
        >
          ADMIN
           
        </a>
        <img
          alt=""
          id="dropdown"
          src="https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png"
        />
        <br />
         
        <span
          class="time"
          id="currentTime"
        />
      </div>
    </header>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
